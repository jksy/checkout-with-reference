name: 'Checkout with reference'
description: 'Checkout source code with reference option'
inputs:
  github_token:
    description: 'GitHub token $github.token'
    default: ${{ github.token }}
    required: false
  github_actor:
    description: 'GitHub actor. $github.actor'
    default: ${{ github.actor }}
    required: false
  github_repository:
    description: 'GitHub repository. $github.repository'
    default: ${{ github.repository }}
    required: false
  branch_name:
    description: 'Specify branch_name for checking out'
    required: false
  sha:
    description: 'Specify commit sha for checking out(default: $github.sha)'
    required: false
  reference_dir:
    description: 'Reference repository directory.'
    required: true
  fetch_lfs:
    description: 'Clone with fetching LFS .'
    default: false
  checkout_dir:
    description: 'expoterd NFS directory with host ip address. ex:10.0.0.1:/exports'
    required: true
runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        set -xe

        export __SHA=${{ inputs.sha || github.sha }}
        if [ ! -z "${{ inputs.branch_name }}" ] ;then
          # Override sha value if branch_name is presented.
          __SHA=$(/usr/bin/git ls-remote https://${{ inputs.github_actor }}:${{ inputs.github_token }}@github.com/${{ inputs.github_repository }}.git ${{ inputs.branch_name }})
        fi

        if ! ${{ inputs.fetch_lfs }} ; then
          export GIT_LFS_SKIP_SMUDGE=1
        fi

        /usr/bin/git clone \
          --depth=1 \
          --reference-if-able=${{ inputs.reference_dir }} \
          https://${{ inputs.github_actor }}:${{ inputs.github_token }}@github.com/${{ inputs.github_repository }}.git \
          ${{ inputs.checkout_dir }}

        pushd ${{ inputs.checkout_dir }}
          /usr/bin/git fetch --depth=1 origin $__SHA
          /usr/bin/git reset --hard FETCH_HEAD
        popd

        unset GIT_LFS_SKIP_SMUDGE
        unset __SHA
